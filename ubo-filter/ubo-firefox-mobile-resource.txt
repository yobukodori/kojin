# name:  ublock origin user resource for firefox mobile 79+
# author: yobukodori
# install: add this file url to 'userResourcesLocation' in 'advanced settings'

firefox-mobile-bookmarklet-menu.js application/javascript
(function() {
	if (! window["fmbm-data"]){
		window["fmbm-data"] = { nInstance:0};
	}
	let appId = window["fmbm-data"].nInstance++, appName = "fmbm", appVer = "v.0.1.0",
		appLogPrefix = "["+appName+":"+appId+"]";
	function log(){
		console.log.apply(console,[appLogPrefix].concat(Array.from(arguments)));
	}
	log(appName,appVer);
	log("running on", location.href);
	let name = '{{1}}', src = '{{2}}';
	log("arguments:", {name:name, src:src});
	if (! /^(https?|javascript):/.test(src)){
		log("non-supported src url:", src);
		return;
	}
	function runScript(src){
		log("run",src);
		if (/^javascript:/.test(src)){
			let code = src.substring("javascript:".length);
			src = URL.createObjectURL(new Blob([code],{type:"application/javascript"}));
			log("converted javascript code to", src);
		}
		let e = document.createElement("script");
		e.src = src;
		document.body.appendChild(e);
	}
	function appendStylesheet(rules, id)	{
		let e = document.createElement("style");
		if (id){
			e.id = id;
		}
		e.type = "text/css";
		e.innerHTML = rules;
		document.getElementsByTagName("head")[0].appendChild(e);
	}
	function createMenu(){
		appendStylesheet("#fmbm-menu-button{border:thin solid;width:30px;height:30px;background-color:gold; color:black;font-size:24px;font-family:serif;font-weight:bold;text-align:center;padding:initial; position:fixed;top:100px;right:0px;z-index:100010;} #fmbm-menu{display:inline-flex;flex-direction:column;background-color:gainsboro;position:fixed;top:100px;right:0px;z-index:100020;} #fmbm-menu > button {font-family:sans-serif;font-size:20px;!important;border:thin solid !important;} .fmbm-hide{display:none!important;}");
		log("creating menu-button");
		let btn = document.createElement("button");
		btn.id = "fmbm-menu-button";
		btn.textContent = "B";
		document.body.appendChild(btn);
		btn.addEventListener("click",ev=>{
			ev.stopPropagation();
			log("menu-button clicked and create menu");
			let html = ""//'<div>'+appName+' '+appVer+'</div>';
			document["fmbm-data"].bm.forEach((bm,idx)=>{
				let i = bm.src.lastIndexOf("/")+1, filename = bm.src.substring(i, i+40);
				html += '<button class="fmbm-menu-item" data-index="'+idx+'">'
							+ bm.name + ' ' + filename
							+ '</button>';
			});
			html += '<button id="fmbm-menu-close">Close</button>'
						+ '<button id="fmbm-menu-exit">Exit</button>';
			let menu = document.createElement("div");
			menu.id = "fmbm-menu";
			menu.innerHTML = html;
			document.body.appendChild(menu);
			Array.from(menu.getElementsByClassName("fmbm-menu-item")).forEach(e=>{
				e.addEventListener("click", ev=>{
					log("menu-item clicked and remove menu");
					menu.remove();
					runScript(document["fmbm-data"].bm[ev.target.getAttribute("data-index")].src);
				});
			});
			document.getElementById("fmbm-menu-close").addEventListener("click", ev=>{
				log("menu-close clicked");
				//menu.remove();
			});
			document.getElementById("fmbm-menu-exit").addEventListener("click", ev=>{
				log("menu-exit clicked and hide menu-button");
				btn.classList.add("fmbm-hide");
			});
			document.addEventListener("click",ev=>{
				if (menu.parentElement){
					log("document clicked and remove menu");
					menu.remove();
				}
			});
		});
	}
	function onDomReady(ev){
		log("onRomReady");
		if (! document["fmbm-data"]){
			log('initializing document["fmbm-data"]');
			document["fmbm-data"] = { bm: [] };
		}
		if (document["fmbm-data"].bm.push({name: name, src: src}) === 1){
			createMenu();
		}
	}
	log("readystate",document.readyState);
	if (document.readyState === "loading"){
		document.addEventListener("DOMContentLoaded", onDomReady);
		log("added event listener: DOMContentLoaded");
	} else {
		onDomReady();
	}
})();


google-link-fix.js application/javascript
(function() {
	if (location.pathname !== "/search"){
		return;
	}
	function onDomReady(ev){
		["contextmenu","touchstart","mousedown"].forEach(e=>{
			if (document.querySelector('a[on'+e+']')){
				document.addEventListener(e, function(event){event.stopImmediatePropagation();}, true);
			}
		});
		Array.from(document.links).forEach(a=>{
			try {
				let url = new URL(a.href);
				if (url.hostname === location.hostname && url.pathname === "/url" && url.search){
					let params = {};
					url.search.substring(1).split("&").forEach(param=>{
						let i = param.indexOf("="), 
							name = (i !== -1 ? param.substring(0, i) : ""), 
							val = (i !== -1 ? decodeURIComponent(param.substring(i+1)) : null);
						params[name] = val;
					});
					let href = params["url"] || params["q"] || "";
					if (/^https?:/.test(href)){
						a.href = href;
					}
				}
			}
			catch (e){
			}
		});
	}
	if (document.readyState === "loading"){
		document.addEventListener("DOMContentLoaded", onDomReady);
	} else {
		onDomReady();
	}
})();
